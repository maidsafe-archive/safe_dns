initSidebarItems({"fn":[["deserialise","utility function to deserialise a Decodable type"],["generate_random_array_u8_64","Generate a random array of 64 u8's"],["generate_random_string","Generates a random string for specified size"],["generate_random_vector","Generate a random vector of given length"],["hybrid_decrypt","Reverse of hybrid_encrypt. Refer hybrid_encrypt."],["hybrid_encrypt","Combined Asymmetric and Symmetric encryption. The data is encrypted using random Key and IV with Xsalsa-symmetric encryption. Random IV ensures that same plain text produces different cipher-texts for each fresh symmetric encryption. The Key and IV are then asymmetrically enrypted using Public-MAID and the whole thing is then serialised into a single Vec<u8>."],["serialise","utility function to serialise an Encodable type"],["slice_equal","Returns true if both slices are equal in length, and have equal contents"]],"mod":[["test_utils","Common utility functions for writting test cases"]]});